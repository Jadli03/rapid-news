{"ast":null,"code":"var _jsxFileName = \"D:\\\\ui-2week\\\\ui\\\\rapid-news\\\\src\\\\components\\\\Paginate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginate = _ref => {\n  _s();\n\n  let {\n    data,\n    RenderComponent,\n    pageLimit,\n    dataLimit\n  } = _ref;\n  const [pages] = useState(Math.round(data.length / dataLimit));\n  const [currentPage, setCurrentPage] = useState(1);\n\n  function goToNextPage() {\n    setCurrentPage(page => page + 1);\n  }\n\n  function goToPreviousPage() {\n    setCurrentPage(page => page - 1);\n  }\n\n  function changePage(event) {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit;\n    const endIndex = startIndex + dataLimit;\n    return data.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataContainer\",\n      children: getPaginatedData().map((d, idx) => /*#__PURE__*/_jsxDEV(RenderComponent, {\n        data: d\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousPage,\n        className: `prev ${currentPage === 1 ? 'disabled' : ''}`,\n        children: \"prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), getPaginationGroup().map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePage,\n        className: `paginationItem ${currentPage === item ? 'active' : null}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextPage,\n        className: `next ${currentPage === pages ? 'disabled' : ''}`,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginate, \"TAuAHIRT/chsJ5y/NrRj9/numrE=\");\n\n_c = Paginate;\nexport default Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"names":["React","useState","Paginate","data","RenderComponent","pageLimit","dataLimit","pages","Math","round","length","currentPage","setCurrentPage","goToNextPage","page","goToPreviousPage","changePage","event","pageNumber","Number","target","textContent","getPaginatedData","startIndex","endIndex","slice","getPaginationGroup","start","floor","Array","fill","map","_","idx","d","item","index"],"sources":["D:/ui-2week/ui/rapid-news/src/components/Paginate.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nconst  Paginate = ({ data, RenderComponent, pageLimit, dataLimit }) => {\r\n    const [pages] = useState(Math.round(data.length / dataLimit));\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n    function goToNextPage() {\r\n        setCurrentPage((page) => page + 1);\r\n    }\r\n  \r\n    function goToPreviousPage() {\r\n        setCurrentPage((page) => page - 1);\r\n    }\r\n  \r\n    function changePage(event) {\r\n        const pageNumber = Number(event.target.textContent);\r\n        setCurrentPage(pageNumber);\r\n    }\r\n  \r\n    const getPaginatedData = () => {\r\n        const startIndex = currentPage * dataLimit - dataLimit;\r\n        const endIndex = startIndex + dataLimit;\r\n        return data.slice(startIndex, endIndex);\r\n    };\r\n  \r\n    const getPaginationGroup = () => {\r\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n        return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\r\n    };\r\n  \r\n    return (\r\n        <div>\r\n    \r\n        {/* show the posts, 10 posts at a time */}\r\n        <div className=\"dataContainer\">\r\n          {getPaginatedData().map((d, idx) => (\r\n            <RenderComponent key={idx} data={d} />\r\n          ))}\r\n        </div>\r\n    \r\n        {/* show the pagiantion\r\n            it consists of next and previous buttons\r\n            along with page numbers, in our case, 5 page\r\n            numbers at a time\r\n        */}\r\n        <div className=\"pagination\">\r\n          {/* previous button */}\r\n          <button\r\n            onClick={goToPreviousPage}\r\n            className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\r\n          >\r\n            prev\r\n          </button>\r\n    \r\n          {/* show page numbers */}\r\n          {getPaginationGroup().map((item, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={changePage}\r\n              className={`paginationItem ${currentPage === item ? 'active' : null}`}\r\n            >\r\n              <span>{item}</span>\r\n            </button>\r\n          ))}\r\n    \r\n          {/* next button */}\r\n          <button\r\n            onClick={goToNextPage}\r\n            className={`next ${currentPage === pages ? 'disabled' : ''}`}\r\n          >\r\n            next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Paginate;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAOC,QAAQ,GAAG,QAAqD;EAAA;;EAAA,IAApD;IAAEC,IAAF;IAAQC,eAAR;IAAyBC,SAAzB;IAAoCC;EAApC,CAAoD;EACnE,MAAM,CAACC,KAAD,IAAUN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWN,IAAI,CAACO,MAAL,GAAcJ,SAAzB,CAAD,CAAxB;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;;EAEA,SAASY,YAAT,GAAwB;IACpBD,cAAc,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAd;EACH;;EAED,SAASC,gBAAT,GAA4B;IACxBH,cAAc,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAd;EACH;;EAED,SAASE,UAAT,CAAoBC,KAApB,EAA2B;IACvB,MAAMC,UAAU,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,WAAd,CAAzB;IACAT,cAAc,CAACM,UAAD,CAAd;EACH;;EAED,MAAMI,gBAAgB,GAAG,MAAM;IAC3B,MAAMC,UAAU,GAAGZ,WAAW,GAAGL,SAAd,GAA0BA,SAA7C;IACA,MAAMkB,QAAQ,GAAGD,UAAU,GAAGjB,SAA9B;IACA,OAAOH,IAAI,CAACsB,KAAL,CAAWF,UAAX,EAAuBC,QAAvB,CAAP;EACH,CAJD;;EAMA,MAAME,kBAAkB,GAAG,MAAM;IAC7B,IAAIC,KAAK,GAAGnB,IAAI,CAACoB,KAAL,CAAW,CAACjB,WAAW,GAAG,CAAf,IAAoBN,SAA/B,IAA4CA,SAAxD;IACA,OAAO,IAAIwB,KAAJ,CAAUxB,SAAV,EAAqByB,IAArB,GAA4BC,GAA5B,CAAgC,CAACC,CAAD,EAAIC,GAAJ,KAAYN,KAAK,GAAGM,GAAR,GAAc,CAA1D,CAAP;EACH,CAHD;;EAKA,oBACI;IAAA,wBAGA;MAAK,SAAS,EAAC,eAAf;MAAA,UACGX,gBAAgB,GAAGS,GAAnB,CAAuB,CAACG,CAAD,EAAID,GAAJ,kBACtB,QAAC,eAAD;QAA2B,IAAI,EAAEC;MAAjC,GAAsBD,GAAtB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAHA,eAcA;MAAK,SAAS,EAAC,YAAf;MAAA,wBAEE;QACE,OAAO,EAAElB,gBADX;QAEE,SAAS,EAAG,QAAOJ,WAAW,KAAK,CAAhB,GAAoB,UAApB,GAAiC,EAAG,EAFzD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGe,kBAAkB,GAAGK,GAArB,CAAyB,CAACI,IAAD,EAAOC,KAAP,kBACxB;QAEE,OAAO,EAAEpB,UAFX;QAGE,SAAS,EAAG,kBAAiBL,WAAW,KAAKwB,IAAhB,GAAuB,QAAvB,GAAkC,IAAK,EAHtE;QAAA,uBAKE;UAAA,UAAOA;QAAP;UAAA;UAAA;UAAA;QAAA;MALF,GACOC,KADP;QAAA;QAAA;QAAA;MAAA,QADD,CAVH,eAqBE;QACE,OAAO,EAAEvB,YADX;QAEE,SAAS,EAAG,QAAOF,WAAW,KAAKJ,KAAhB,GAAwB,UAAxB,GAAqC,EAAG,EAF7D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA6CD,CAzEH;;GAAOL,Q;;KAAAA,Q;AA2EL,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}